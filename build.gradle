buildscript {
    ext.kotlin_version = '1.9.20'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group = 'org.tinhol.mapper'
version = '0.1-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

java {
    withSourcesJar()
}

repositories {
    mavenCentral()
}

configurations {
    deployerJars
    sourceArchives
}

dependencies {
    implementation(group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version)
    implementation('commons-io:commons-io:2.13.0')
    implementation(group: 'org.docx4j', name: 'docx4j-JAXB-ReferenceImpl', version: '11.4.9')
    implementation(group: 'com.jayway.jsonpath', name: 'json-path', version: '2.8.0')
    implementation('junit:junit:4.13.2')
    deployerJars(group: 'org.apache.maven.wagon', name: 'wagon-http', version: '3.5.3')
}

tasks.register('sourceJar', Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

artifacts {
    archives sourceJar
}

def uploadUrl = rootProject.hasProperty('uploadUrl') ? rootProject['uploadUrl'] : ''
def uploadUser = rootProject.hasProperty('uploadUser') ? rootProject['uploadUser'] : ''
def uploadPassword = rootProject.hasProperty('uploadPassword') ? rootProject['uploadPassword'] : ''

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'mapper-core'
            from components.java
        }
    }
    repositories {
        maven {
            url = uploadUrl
            credentials {
                username = uploadUser
                password = uploadPassword
            }
        }
    }
}